/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package myDemoApp;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


import java.util.ArrayList;
import java.util.Arrays;


class AppTest {

  //check if both strings are present in the arraylist
  @Test
  public void testFound() {
     ArrayList<String> array = new ArrayList<>(Arrays.asList("1", "2", "3", "4"));
     assertTrue(App.searchString(array, "1", "2"));
   }

   //check if only one of the elements is in the arraylist while the second is not
   @Test
   public void testNotFound() {
     ArrayList<String> array = new ArrayList<>(Arrays.asList("a", "b", "c"));
     assertFalse(App.searchString(array, "a", "ThisIsNotPresent"));
   }

   //check if neither of the given strings are present
   @Test
   public void testNotFoundTwoStrings() {
     ArrayList<String> array = new ArrayList<>(Arrays.asList("first", "second", "third", "forth", "fifth"));
     assertFalse(App.searchString(array, "sixth", "seventh"));
   }

   //check what happens when an array has only one element but there are not given strings
   @Test
   public void testArrayWithLimitedNumbers() {
     ArrayList<String> array = new ArrayList<>(Arrays.asList("onlyElement"));
     assertFalse(App.searchString(array, "onlyElement", "thisCannotBeAnElement"));
   }

   //check if the given array is empty
   @Test
   public void testEmptyArray() {
     ArrayList<String> array = new ArrayList<>();
     assertFalse(App.searchString(array, "ABCD", "EFGH"));
   }

   //check if a null is given instead of an arraylist
   @Test
   public void testNull() {
     assertFalse(App.searchString(null, "FirstString", "SecondString"));
   }



}
